@model ELabel.ViewModels.ImageFileUpload

@{
    ViewData["Title"] = "Change Image";
}

<h2>Change Image</h2>

<h4>Product</h4>
<hr />
<div class="row">
    <div class="col-md-6">
        <form method="post" enctype="multipart/form-data" asp-action="ChangeImage">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @Html.ValidationMessage("CustomError", new { @class = "text-danger" })
            <input type="hidden" asp-for="ProductId" />
            <div class="mb-3">
                <label asp-for="File" class="form-label"></label>
                <input asp-for="File" class="form-control" accept="image/*" aria-describedby="FileHelp" />
                <div id="FileHelp" class="form-text">@ViewData.ModelMetadata.Properties.Where(m => m.PropertyName == "File").FirstOrDefault()?.Description</div>
                <span asp-validation-for="File" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <input type="submit" value="Upload" class="btn btn-primary" />
            </div>
        </form>
    </div>

    <div class="col-md-6 col-md-offset-2">
        <div class="p-3 bg-light rounded-3">
            <h3>Image Optimization</h3>
            <p>For better performance, image will be resized and compressed for web.</p>
            <p>Please provide a product image, in any format, with the folloing minimum dimensions:</p>
            <ul>
                <li>Minimum width: @ImageFileUpload.MinWidth px</li>
                <li>Minimum height: @ImageFileUpload.MinHeight px</li>
            </ul>
            <small>Uploaded images will be scaled down to a maximum size of @ImageFileUpload.MaxWidth x @ImageFileUpload.MaxHeight px and will be stored in <a href="https://en.wikipedia.org/wiki/WebP" target="_blank">WebP format</a>, with @ImageFileUpload.Quality% quality.</small>
        </div>
    </div>

</div>

<div>
    <a asp-action="Details" asp-route-id="@Model.ProductId">Back to Product</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
